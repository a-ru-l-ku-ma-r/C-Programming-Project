/**************************************************************************************************
        Write a C program to convert a Singly Linked list into a string and returns it
**************************************************************************************************/

#include<stdio.h>
#include <stdlib.h>
#include <string.h>

struct node 
{
    int num;                        //Data of the node
    struct node *nextptr;           //Address of the next node
}*stnode;

void createNodeList(int n);  

char* toString() {
    char* str = (char*) malloc(sizeof(char) * 100);
    struct node *tmp = stnode;
    int i = 0;
    while(tmp != NULL) {
        sprintf(str + i, "%d ", tmp->num); // append the value to the string
        tmp = tmp->nextptr;
        i += strlen(str + i);
    }
    return str;
}    
int main()
{
    int n;
    printf("\nLinked List: Convert a Singly Linked list into a string\n");
	printf("-------------------------------------------------------------\n");		
    printf("Input the number of nodes: ");
    scanf("%d", &n);
    createNodeList(n);
    printf("\nReturn data entered in the list as a string:\n");
    printf("The linked list: %s", toString());   
    return 0;
}

void createNodeList(int n)
{
    struct node *fnNode, *tmp;
    int num, i;
    stnode = (struct node *)malloc(sizeof(struct node));

    if(stnode == NULL) //check whether the fnnode is NULL and if so no memory allocation
    {
        printf(" Memory can not be allocated.");
    }
    else
    {
      printf(" Input data for node 1 : ");
      scanf("%d", &num);
      stnode->num = num;      
      stnode->nextptr = NULL;  
      tmp = stnode;
    // Creating n nodes and adding to linked list
      for(i=2; i<=n; i++)
        {
            fnNode = (struct node *)malloc(sizeof(struct node));
            if(fnNode == NULL)
            {
                printf(" Memory can not be allocated.");
                break;
            }
            else
            {
                printf(" Input data for node %d : ", i);
                scanf(" %d", &num);

                fnNode->num = num;       
                fnNode->nextptr = NULL;  

                tmp->nextptr = fnNode;  
                tmp = tmp->nextptr; 
            }
        }
    }
}


// *************************************************************************************
Output :
Linked List: Convert a Singly Linked list into a string
-------------------------------------------------------------
Input the number of nodes: 5
 Input data for node 1 : 45
 Input data for node 2 : 28
 Input data for node 3 : 64
 Input data for node 4 : 12
 Input data for node 5 : 3

Return data entered in the list as a string:
The linked list: 45 28 64 12 3 
