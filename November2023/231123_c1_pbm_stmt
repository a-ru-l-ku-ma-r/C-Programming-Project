/****************************************************************************************************
              Write a C program to sort the elements of a queue in ascending order
****************************************************************************************************/

#include <stdio.h>

#define MAX_SIZE 100
int queue[MAX_SIZE];
int front = -1, back = -1;
void enqueue(int item) {
    if (back == MAX_SIZE - 1) {
        printf("Error: Queue is full\n");
        return;
    }
    if (front == -1) {
        front = 0;
    }
    back++;
    queue[back] = item;
}
int dequeue() {
    if (front == -1 || front > back) {
        printf("Error: Queue is empty\n");
        return -1;
    }
    int item = queue[front];
    front++;
    return item;
}
void display() {
    if (front == -1) {
        printf("Error: Queue is empty\n");
        return;
    }
    for (int i = front; i <= back; i++) {
        printf("%d ", queue[i]);
    }
    printf("\n");
}
void sort_queue_asc() {
    int i, j, temp;
    int n = back - front + 1;

    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (queue[i] > queue[j]) {
                temp = queue[i];
                queue[i] = queue[j];
                queue[j] = temp;
            }
        }
    }
}
int main() {
    // Insert elements into the queue
    printf("Input some elements into the queue:");
    enqueue(4);
    enqueue(2);
    enqueue(7);
    enqueue(5);
    enqueue(1);
    // Display the unsorted queue
    printf("\nElements of the queue:\n");
    display();
    // Sort the queue
    printf("\nSort the said queue:");
    sort_queue_asc();
    // Display the sorted queue
    printf("\nElements of the sorted queue in ascending order:\n");
    display();
    printf("\nInput two more elements into the queue:");
	enqueue(-1);
	enqueue(3);
	printf("\nElements of the queue:\n");
	display();
    printf("\nSort the said queue:");
    sort_queue_asc();
    // Display the sorted queue
    printf("\nElements of the sorted queue in ascending order:\n");    
    sort_queue_asc();
    display();
    return 0;
}
