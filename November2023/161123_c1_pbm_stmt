/*********************************************************************************************************
          Write a C program to implement a queue using an array. Create a function that removes an 
                                      element from the queue.
*********************************************************************************************************/

#include <stdio.h>
#include <stdlib.h>

struct Node {
   int data;
   struct Node *next;
};

struct Node* front = NULL;
struct Node* rear = NULL;

void enqueue(int x) {
   struct Node* temp =
      (struct Node*)malloc(sizeof(struct Node));
   temp->data = x;
   temp->next = NULL;
   if (front == NULL && rear == NULL) {
      front = rear = temp;
      return;
   }
   rear->next = temp;
   rear = temp;
}

void dequeue() {
   struct Node* temp = front;
   if (front == NULL) {
      printf("Queue is empty\n");
      return;
   }
   if (front == rear) {
      front = rear = NULL;
   } else {
      front = front->next;
   }
   free(temp);
}

void display() {
   struct Node* temp = front;
   if (front == NULL) {
      printf("Queue is empty\n");
      return;
   }
   while (temp != NULL) {
      printf("%d ", temp->data);
      temp = temp->next;
   }
   printf("\n");
}

int is_empty() {
   return front == NULL;
}

int main() {
	printf("Initialize a queue!");
    // Insert some elements into the queue.
	printf("\nInsert some elements into the queue:\n");
    enqueue(1);
    enqueue(2);
    enqueue(3);
    display();
    printf("\nDelete an element from the said queue:\n");
    dequeue();
    display();
	printf("\nDelete another element from the said queue:\n");
    dequeue();
    display();
    return 0;
}


// *********************************************************************************************************
Output :
Initialize a queue!
Insert some elements into the queue:
1 2 3 

Delete an element from the said queue:
2 3

Delete another element from the said queue:
3
