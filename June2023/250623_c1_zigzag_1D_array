/**********************************************************
            ZigZag Pattern of 1-D array
**********************************************************/

#include <stdio.h>


/* Function Prototype Declaration */
void get_element_array(int t_size, int t_arr[]);
void print_array(int t_size, int t_arr[]);
void swap(int *var1, int *var2);
void zigzag(int t_size, int t_arr[]);

int main()
{
    int size, sum;

    printf("Enter the size of Array : \n");
    scanf("%d", &size);

    int arr[size];

    printf("Enter the elements of Array : \n");
    get_element_array(size, arr);

    printf("\nEntered elements of array : \n");
    print_array(size, arr);


    zigzag(size, arr);
    printf("\nThe ZigZag pattern of array : \n");
    print_array(size, arr);

    return 0;
}



/* Function Definition */
void get_element_array(int t_size, int t_arr[])
{
    for(int i=0; i<t_size; i++)
        scanf("%d", &t_arr[i]);
}

void print_array(int t_size, int t_arr[])
{
    for(int i=0; i<t_size; i++)
        printf("%d\t", t_arr[i]);
}


void swap(int *var1, int *var2)
{
    int temp;

     temp = *var1;
    *var1 = *var2;
    *var2 = temp;
}

void zigzag(int t_size, int t_arr[])
{
    int temp = 1, i;

    for(i=0; i<t_size-1; i++)
    {
        if(temp)
        {
            if(t_arr[i] > t_arr[i+1])
                swap(&t_arr[i], &t_arr[i+1]);

            temp = 0;
        }
        else
        {
            if(t_arr[i] < t_arr[i+1])
                swap(&t_arr[i], &t_arr[i+1]);

            temp = 1;
        }
    }
}

/********************************************************************************
                Compiler Output
Enter the size of Array :
7
Enter the elements of Array :
1
2
3
4
5
6
7

Entered elements of array :
1       2       3       4       5       6       7
The ZigZag pattern of array :
1       3       2       5       4       7       6
Process returned 0 (0x0)   execution time : 6.605 s
Press any key to continue.
********************************************************************************/
