/***********************************************************************
            Rotation of Elements in 1D Array
***********************************************************************/

#include <stdio.h>


/* function prototype declaration */
void get_array(int t_size, int t_arr[]);
void print_array(int t_size, int t_arr[]);
int find_odd_even(int t_size);
int find_remainder(int t_size);
void shift(int t_size, int t_arr[], int t_odd_even, int t_remainder);


int main()
{
    int size, arr[100], odd_even, remainder;

    printf("Enter the size of array : \n");
    scanf("%d", &size);

    get_array(size, arr);

    printf("\nEntered array elements are as follows : \n");
    print_array(size, arr);

    odd_even = find_odd_even(size);

    remainder = find_remainder(size);

    shift(size, arr, odd_even, remainder);

    return 0;
}




                /* function definition */

void get_array(int t_size, int t_arr[])
{
    printf("\nEnter the elements of array:\n");

    for(int i=0; i<t_size; i++)
        scanf("%d", &t_arr[i]);
}

void print_array(int t_size, int t_arr[])
{
    for(int i=0; i<t_size; i++)
        printf("%d\t", t_arr[i]);

    printf("\n");
}

int find_odd_even(int t_size)
{
    return (t_size%2);
}

int find_remainder(int t_size)
{
    return (t_size/2);
}

void shift(int t_size, int t_arr[], int t_odd_even, int t_remainder)
{
    int dup_arr[t_size];
    int i, j, k;


    if(t_odd_even && t_remainder)
    {
        j = 1; k=0;

        for(i=0; i<t_remainder; i++)
        {
            dup_arr[i] = t_arr[t_remainder + j];
            j++;
        }

        dup_arr[i] = t_arr[t_remainder];
        i++;

        for( ; i<t_size; i++)
        {
            dup_arr[i] = t_arr[k];
            k++;
        }
    }
    else
    {
        j = 0; k=0;

        for(i=0; i<t_remainder; i++)
        {
            dup_arr[i] = t_arr[t_remainder + j];
            j++;
        }


        for( ; i<t_size; i++)
        {
            dup_arr[i] = t_arr[k];
            k++;
        }
    }


    printf("\nafter right and left shift:\n");
    print_array(t_size, dup_arr);

}

//////////////////////////////////////////////////////////////////////////////////////////////////
                Compiler Output (EVEN number of elements in Array)
Enter the size of array :
10

Enter the elements of array:
1
2
3
4
5
6
7
8
9
10

Entered array elements are as follows :
1       2       3       4       5       6       7       8       9       10

after right and left shift:
6       7       8       9       10      1       2       3       4       5

Process returned 0 (0x0)   execution time : 9.538 s
Press any key to continue.
//////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////
                Compiler Output (ODD number of elements in Array)
Enter the size of array :
15

Enter the elements of array:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

Entered array elements are as follows :
1       2       3       4       5       6       7       8       9       10      11      12      13      14      15


after right and left shift:
9       10      11      12      13      14      15      8       1       2       3       4       5       6       7


Process returned 0 (0x0)   execution time : 14.803 s
Press any key to continue.
//////////////////////////////////////////////////////////////////////////////////////////////////
