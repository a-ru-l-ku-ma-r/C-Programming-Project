/****************************************************************************
            Replace with Rank in 1D Array
****************************************************************************/

#include<stdio.h>


/* function prototype declaration*/
void get_element_array(int t_size, int t_arr[]);
void print_array(int t_size, int t_arr[]);
int* copy_array(int t_size, int t_arr[]);
void sort_ascending(int t_size, int t_arr[]);
void replace_rank(int t_size, int t_arr[], int t_temp[]);



int main()
{
    int size;
    printf("Enter the size of First Array : \n");
    scanf("%d", &size);

    int arr[size], *temp;

    printf("\nEnter element of array : \n");
    get_element_array(size, arr);

    printf("\n\nThe element of array : \n");
    print_array(size, arr);

    temp = copy_array(size, arr);

    printf("\n\nThe element of copied array : \n");
    print_array(size, temp);


    sort_ascending(size, temp);

    printf("\n\nThe element of array in ascending order : \n");
    print_array(size, temp);

    replace_rank(size, arr, temp);

    printf("\n\nThe element of array replaced with Rank : \n");
    print_array(size, arr);


    return 0;
}



/* function definition */
void get_element_array(int t_size, int t_arr[])
{
    for(int i=0; i<t_size; i++)
        scanf("%d", &t_arr[i]);
}

void print_array(int t_size, int t_arr[])
{
    for(int i=0; i<t_size; i++)
        printf("%d\t", t_arr[i]);
}

int* copy_array(int t_size, int t_arr[])
{
    static int t_temp[100];

    for(int i=0; i<t_size; i++)
        t_temp[i] = t_arr[i];

    return t_temp;

}


void sort_ascending(int t_size, int t_arr[])
{
    int i, j, x;

    for(i=0; i<t_size; i++)
    {
        for(j=i+1; j<t_size; j++)
        {
            if(t_arr[i] > t_arr[j])
            {
                       x = t_arr[i];
                t_arr[i] = t_arr[j];
                t_arr[j] = x;
            }

        }
    }
}


void replace_rank(int t_size, int t_arr[], int t_temp[])
{
    int i, j;

    for(i=0; i<t_size; i++)
    {
        for(j=0; j<t_size; j++)
        {
            if(t_temp[j] == t_arr[i])
            {
                t_arr[i] = j+1;
                break;
            }
        }
    }
}


/********************************************************************************
                        Compiler Output
Enter the size of First Array :
7

Enter element of array :
12
54
3
8
27
15
6


The element of array :
12      54      3       8       27      15      6

The element of copied array :
12      54      3       8       27      15      6

The element of array in ascending order :
3       6       8       12      15      27      54

The element of array replaced with Rank :
4       7       1       3       6       5       2
Process returned 0 (0x0)   execution time : 28.214 s
Press any key to continue.

********************************************************************************/
