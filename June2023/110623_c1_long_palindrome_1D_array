///////////////////////////////////////////////////////////////////
//              Longest Palindrome in 1-D array                  //
///////////////////////////////////////////////////////////////////

#include <stdio.h>
#include <limits.h>


int check_palindrome(int in);

int main()
{
    int arr[100], n, res = INT_MIN, i;

    printf("Enter the size of an Array : \n");
    scanf("%d", &n);

    printf("Enter the element of an Array : \n");
    for(i=0; i<n; i++)
        scanf("%d", &arr[i]);

    printf("\nEntered element of an Array : \n ");
    for(i=0; i<n; i++)
        printf("%d  ", arr[i]);

    for(i=0; i<n; i++)
    {
        printf("\n main loop = %d\n",(check_palindrome(arr[i] && res<arr[i])));
        if(check_palindrome(arr[i] && res<arr[i]))
            res = arr[i];

    }

    if(res == INT_MIN)
        res = -1 ;

    printf("\nLongest Palindrome in an entered Array : %d\n", res);

    return 0;
}

int check_palindrome(int in)
{
    int rev=0, temp = in, t_remainder;

    while(temp > 0)
    {
        t_remainder = temp % 10;
        rev = rev*10 + t_remainder; 
        temp /= 10; 
    }

    if(in == rev)
        return 1;

    return 0;
}


/***************************************************************************************
Enter the size of an Array :
3
Enter the element of an Array :
121
10456
1000001

Entered element of an Array :
 121  10456  1000001
Longest Palindrome in an entered Array : 1000001

Process returned 0 (0x0)   execution time : 19.204 s
Press any key to continue.


***************************************************************************************/
