/****************************************************************************
                  Disjoint or Not in 1D Array
****************************************************************************/

#include<stdio.h>


/* function prototype declaration*/
void get_element_array(int t_size, int t_arr[]);
void print_array(int t_size, int t_arr[]);
int disjoint(int t_size1, int t_arr1[], int t_size2, int t_arr2[]);


int main()
{
    int size1, size2, n; // n->count the number of intersection element
    printf("Enter the size of First Array : \n");
    scanf("%d", &size1);

    printf("Enter the size of Second Array : \n");
    scanf("%d", &size2);

    int arr1[size1], arr2[size2];

    printf("\nEnter element of first array : \n");
    get_element_array(size1, arr1);

    printf("\n\nEnter element of Second array : \n");
    get_element_array(size2, arr2);

    printf("\nThe element of First array : \n");
    print_array(size1, arr1);

    printf("\nThe element of Second array : \n");
    print_array(size2, arr2);


    if(disjoint(size1, arr1, size2, arr2))
        printf("\nOutput: Yes, Disjoint\n");
    else
        printf("\nOutput: Not Disjoint\n");

    return 0;
}



/* function definition */
void get_element_array(int t_size, int t_arr[])
{
    for(int i=0; i<t_size; i++)
        scanf("%d", &t_arr[i]);
}

void print_array(int t_size, int t_arr[])
{
    for(int i=0; i<t_size; i++)
        printf("%d\t", t_arr[i]);
}

int disjoint(int t_size1, int t_arr1[], int t_size2, int t_arr2[])
{
    int i=0, j=0;

    for(i=0; i<t_size1; i++)
    {
        for(j=0; j<t_size2; j++)
        {
            if(t_arr1[i] == t_arr2[j])
            {
                return 0;
            }
        }
    }


    return 1;
}



/******************************************************************************************
                            Compiler Output : 1
  Enter the size of First Array :
5
Enter the size of Second Array :
6

Enter element of first array :
1
2
3
4
5


Enter element of Second array :
6
7
8
9
10
11

The element of First array :
1       2       3       4       5

The element of Second array :
6       7       8       9       10      11
Output: Yes, Disjoint

Process returned 0 (0x0)   execution time : 12.924 s
Press any key to continue.
_____________________________________________________________________________________
                            Compiler Output : 2
Enter the size of First Array :
5
Enter the size of Second Array :
6

Enter element of first array :
1
2
3
4
5


Enter element of Second array :
4
5
6
7
8
9

The element of First array :
1       2       3       4       5

The element of Second array :
4       5       6       7       8       9
Output: Not Disjoint

Process returned 0 (0x0)   execution time : 11.889 s
Press any key to continue.

****************************************************************************************/
                                  
