/****************************************************************
            Juggling algorithm in 1D Array
****************************************************************/

#include <stdio.h>

/* Function prototype declaration */
int gcd(int a, int b);
void array_rotation(int t_arr[], int t_size, int t__k);


/* function definition */
int gcd(int a, int b)
{
    if(b==0)
        return a;
    else
        return gcd(b, a%b);

}

void array_rotation(int t_arr[], int t_size, int t__k)
{
    int d = -1, i, temp, j;

    for(i=0; i<gcd(t_size, t__k); i++)
    {
        j = i;
        temp = t_arr[i];

        while(1)
        {
            d = (j+t__k) % t_size;

            if(d==i) break;
            t_arr[j] = t_arr[d];
            j = d;
        }
        t_arr[j] = temp;
    }
}




int main()
{
    int size;

    printf("Enter the size of Array : \n");
    scanf("%d", &size);

    int arr[size], i;

    printf("\nEnter the elements of Array : \n");
    for(i=0; i<size; i++)
        scanf("%d", &arr[i]);

    printf("\nEntered elements of Array as follow as : \n");
    for(i=0; i<size; i++)
        printf("%d\t", arr[i]);

    int k; // k - number of rotation
    printf("\nEnter the number of rotation : \n");
    scanf("%d", &k);

    array_rotation(arr, size, k);

    printf("\nEntered mmmmm elements of Array as follow as : \n");
    for(i=0; i<size; i++)
    printf("%d\t", arr[i]);

    return 0;
}

/****************************************************************************

                Compiler Output
Enter the size of Array :
5

Enter the elements of Array :
1
2
3
4
5

Entered elements of Array as follow as :
1       2       3       4       5
Enter the number of rotation :
2

Entered mmmmm elements of Array as follow as :
3       4       5       1       2
Process returned 0 (0x0)   execution time : 14.688 s
Press any key to continue.
****************************************************************************/
